{"version":3,"sources":["components/question-list-item/question-list-item.js","components/question-list-item/index.js","components/service-context/service-context.js","components/service-wrapper/index.js","components/service-wrapper/service-wrapper.js","components/spinner/index.js","components/spinner/spinner.js","actions/index.js","components/question-list/question-list.js","components/question-list/index.js","components/header/header.js","components/header/index.js","components/app/app.js","components/app/index.js","utils/index.js","recuder/index.js","store.js","index.js","services/question-service.js"],"names":["QuestionListItem","question","show","changePosition","changeScore","clazz","active","clazzCard","answered","className","onDoubleClick","e","id","draggable","onDragStart","card","dataTransfer","setData","dragStart","onDragLeave","target","classList","remove","dragLeave","onDragEnd","onDragOver","preventDefault","add","dragOver","onDrop","getData","dragDrop","onClick","title","score","stopPropagation","aria-hidden","owner","answersCount","React","createContext","ServiceProvider","Provider","ServiceConsumer","Consumer","withQuestionService","Wrapped","props","questionService","Spinner","questionLoaded","newQuestions","type","payload","questionShow","QuestionList","this","date","questions","length","then","data","loading","map","key","Component","mapDisptachToProps","action","effect","connect","state","mapDispatchToProps","showSearch","loadingData","Header","search","selected","onChange","a","setTimeout","hideAll","App","arr","el","position","b","pressed","push","index","initialState","Date","seacrch","reducer","newData","oldStore","oldState","window","localStorage","getItem","JSON","parse","newDate","err","loadState","store","createStore","subscribe","stringify","setItem","saveState","getState","fromDate","Math","floor","fetch","json","res","items","_transformData","alert","is_answered","lastActivity","last_activity_date","display_name","answer_count","creationDate","creation_date","ReactDOM","render","value","document","getElementById"],"mappings":"sNAyBA,ICvBeA,EDuBU,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,SAASC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,eAAeC,EAAgB,EAAhBA,YAC9CC,EAASJ,EAASK,OAAS,SAAW,SACtCC,EAAaN,EAASO,SAAW,WAAa,eACpD,OACA,6BACA,yBAAKC,UAAS,eAAUF,GAAaG,cAAe,SAACC,GAAKR,EAAeF,EAASW,KAC9EC,WAAW,EACXC,YAAa,SAACH,IA5BtB,SAAmBA,EAAEI,GACjBJ,EAAEK,aAAaC,QAAQ,KAAKF,GA2BLG,CAAUP,EAAEV,EAASW,KACxCO,YAAa,SAACR,IAvBtB,SAAmBA,GACfA,EAAES,OAAOC,UAAUC,OAAO,YAsBHC,CAAUZ,IAC7Ba,UAAW,SAACb,KACZc,WAAY,SAACd,IAtBrB,SAAkBA,GACdA,EAAEe,iBACFf,EAAES,OAAOC,UAAUM,IAAI,YAoBDC,CAASjB,IAC3BkB,OAAQ,SAAClB,IAnBjB,SAAkBA,EAAEI,EAAKZ,GACrBQ,EAAEe,iBACFf,EAAES,OAAOC,UAAUC,OAAO,YAE1BnB,EADoBQ,EAAEK,aAAac,QAAQ,OAE3C3B,EAAeY,GAcGgB,CAASpB,EAAEV,EAASW,GAAGT,KACjC,yBAAKM,UAAU,aAAauB,QAAS,SAACrB,GAAKT,EAAKD,EAASW,MAAzD,IAAiEX,EAASgC,OAC1E,yBAAKxB,UAAU,aACf,yBAAKA,UAAU,cAAf,IAA8BR,EAASiC,MAAvC,KACA,yBAAKzB,UAAU,gBACX,4BAAQA,UAAU,UAAUuB,QAAS,SAACrB,GAAKP,EAAYH,EAASW,GAAG,QAASF,cAAe,SAACC,GAAKA,EAAEwB,oBAAqB,uBAAG1B,UAAU,0BAA0B2B,cAAY,UAC3K,4BAAQ3B,UAAU,UAASuB,QAAS,SAACrB,GAAKP,EAAYH,EAASW,GAAG,QAASF,cAAe,SAACC,GAAKA,EAAEwB,oBAAqB,uBAAG1B,UAAU,4BAA4B2B,cAAY,aAIxL,yBAAK3B,UAAS,UAAKJ,EAAL,eACV,kEAAeJ,EAASoC,OACxB,6BACA,2IAA4BpC,EAASqC,iB,EE5C1CC,IAAMC,gBAFMC,E,EAAXC,SACWC,E,EAAXC,SCFWC,ECEY,kBAAI,SAACC,GAC5B,OAAM,SAACC,GACH,OACI,kBAACJ,EAAD,MAEQ,SAACK,GACG,OACI,kBAACF,EAAD,iBAAaC,EAAb,CAAoBC,gBAAiBA,WCTlDC,G,MCEC,WACZ,OAEJ,yBAAKxC,UAAU,kBACd,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,mCCVVyC,EAAiB,SAACC,GACpB,MAAO,CACLC,KAAM,mBACNC,QAASF,IAGTG,EAAe,SAAC1C,GAClB,MAAO,CACLwC,KAAO,gBACPC,QAASzC,ICET2C,G,wLACmB,IAAD,EACwCC,KAAKT,MAAtDC,EADS,EACTA,gBAAgBE,EADP,EACOA,eAAeO,EADtB,EACsBA,KACb,IAFT,EAC2BC,UAC7BC,QACVX,EAAgBlB,QAAQ2B,GAAMG,MAAK,SAACC,GAAD,OAAQX,EAAeW,Q,+BAIvD,IAAD,EAC8DL,KAAKT,MAAlEW,EADD,EACCA,UAAUJ,EADX,EACWA,aAAanD,EADxB,EACwBA,eAAeC,EADvC,EACuCA,YAC7C,OAFM,EACmD0D,QAE9C,kBAAC,EAAD,MAGP,wBAAIrD,UAAU,OAAOuB,QAAS,SAACrB,GAAKA,EAAEwB,oBAE9BuB,EAAUK,KAAI,SAAC9D,GACX,OACI,wBAAI+D,IAAK/D,EAASW,IACd,kBAAC,EAAD,CAAkBoD,IAAK/D,EAASW,GAAIX,SAAUA,EAAUC,KAAOoD,EAAcnD,eAAgBA,EAAgBC,YAAaA,a,GAnB/H6D,cAqCrBC,EAAoB,CACtBhB,iBACAI,eACAnD,eDvCmB,SAACS,GACtB,MAAM,CACJwC,KAAM,kBACNC,QAASzC,ICqCTR,YDlCgB,SAACQ,EAAGuD,GACtB,MAAO,CACLf,KAAM,eACNC,QAASzC,EACTwD,OAAQD,KEpBGZ,EDqDAV,IAAsBwB,aAfd,SAACC,GACpB,MAAO,CACHZ,UAAWY,EAAMZ,UACjBD,KAAMa,EAAMb,KACZK,QAASQ,EAAMR,WAWsCI,EAAxBG,CAA4Cd,I,0CE5B3EgB,G,YAAoB,CACtBC,WHEe,SAACf,GAClB,MAAM,CACJL,KAAM,cACNC,QAASI,IGJTP,iBACAuB,YHMgB,WAClB,MAAO,CACLrB,KAAM,cIpCKsB,EDgCA7B,IAAsBwB,aAbb,SAACC,GACrB,MAAO,CACHhE,OAAQgE,EAAMK,OACdlB,KAAMa,EAAMb,QAUyCc,EAAxBF,EAzBtB,SAAC,GAAwE,IAAvEG,EAAsE,EAAtEA,WAAWlE,EAA2D,EAA3DA,OAAOmD,EAAoD,EAApDA,KAAKT,EAA+C,EAA/CA,gBAAgBE,EAA+B,EAA/BA,eAAeuB,EAAgB,EAAhBA,YAC7DpE,EAASC,EAAS,SAAU,SAClC,OACI,yBAAKG,UAAU,cACZ,yBAAKA,UAAU,aAAf,0XACA,kBAAC,IAAD,CAAYA,UAAU,WAAWmE,SAAUnB,EAAMoB,SAAU,SAACpB,GAAUe,EAAWf,MACjF,4BAAQhD,UAAWJ,EAAO2B,QAAO,uCAAE,WAAOrB,GAAP,SAAAmE,EAAA,sDAAYL,IAAcM,YAAW,WAAK/B,EAAgBlB,QAAQ2B,GAAMG,MAAK,SAACC,GAAD,OAAQX,EAAeW,QAAQ,KAA5G,2CAAF,uDAAwH,mCAC3J,uBAAGpD,UAAU,eAAe2B,cAAY,gBEA3C8B,G,OAAqB,CACvBc,QLQY,WACd,MAAM,CACJ5B,KAAM,aKVEE,iBCfG2B,EDmBAZ,YAAQ,KAAKH,EAAbG,EAbH,SAAC,GAAc,IAAbW,EAAY,EAAZA,QACV,OACA,yBAAKvE,UAAU,YAAYuB,QAAS,SAACrB,GAAKqE,MACtC,kBAAC,EAAD,MACA,kBAAC,EAAD,U,uBEZF9E,EAAO,SAACgF,EAAItE,GACf,OAAQsE,EAAInB,KAAI,SAACoB,GAEb,OADAA,EAAG7E,OAAU6E,EAAGvE,KAAKA,IAAMuE,EAAG7E,OACvB6E,MAGRhF,EAAiB,SAACmE,EAAMc,GAC1B,IAAIN,EAAIR,EAAMZ,UACV2B,EAAIf,EAAMgB,QAGd,GAFAD,EAAEE,KAAKH,GAEU,IAAbC,EAAE1B,OAAc,CAAC,IAAD,EACE,CAACmB,EAAEO,EAAE,IAAIP,EAAEO,EAAE,KAA9BP,EAAEO,EAAE,IADW,KACPP,EAAEO,EAAE,IADG,KAEhBP,EAAIA,EAAEf,KAAI,SAACoB,EAAGK,GAAuB,OAAbL,EAAGvE,GAAG4E,EAAcL,KAC5CE,EAAE,GAEN,MAAO,CACH3B,UAAWoB,EACXQ,QAASD,IAGXjF,EAAc,SAACsD,EAAU9C,EAAGwD,GAC/B,IAAMjB,EAAY,YAAOO,GACzB,OAAQU,GACJ,IAAK,QAAUjB,EAAavC,GAAIsB,MAAM,MACtC,IAAK,QAAUiB,EAAavC,GAAIsB,MAAM,MACtC,QAAS,OAAOiB,EAEpB,OAAOA,GC1BJsC,EAAe,CACjB/B,UAAY,GACZD,KAAM,IAAIiC,KAAM,KAAK,EAAE,GACvBJ,QAAS,GACTK,SAAS,EACT7B,SAAU,GAkBC8B,EAfC,WAA+B,IAA9BtB,EAA6B,uDAAvBmB,EAActB,EAAS,uCAEtC,OAAQA,EAAOf,MACX,IAAK,mBAAsB,IAAMD,EAAegB,EAAOd,QAAS,OAAO,2BAAIiB,GAAX,IAAkBZ,UAAUP,EAAcW,SAAS,EAAMa,QAAO,IAChI,IAAK,UAAW,OAAO,2BAAIL,GAAX,IAAkBR,SAAS,IAC3C,IAAK,gBAAkB,IAAMX,EAAejD,EAAKoE,EAAMZ,UAAUS,EAAOd,SAAU,OAAO,2BAAIiB,GAAX,IAAiBZ,UAAUP,IAC7G,IAAK,kBAAoB,IAAM0C,EAAU1F,EAAemE,EAAMH,EAAOd,SAAU,OAAO,2BAAIiB,GAAX,IAAiBZ,UAAUmC,EAAQnC,UAAU4B,QAAQO,EAAQP,UAC5I,IAAK,eAAiB,IAAMnC,EAAc/C,EAAYkE,EAAMZ,UAAUS,EAAOd,QAAQc,EAAOC,QAAS,OAAO,2BAAIE,GAAX,IAAiBZ,UAAWP,IACjI,IAAK,WAAY,IAAMA,EAAemB,EAAMZ,UAAUK,KAAI,SAACoB,GAAyB,OAAnBA,EAAG7E,QAAS,EAAc6E,KAAM,OAAO,2BAAIb,GAAX,IAAiBZ,UAAUP,IAC5H,IAAK,cAAe,OAAO,2BAAImB,GAAX,IAAiBK,QAAO,EAAKlB,KAAMU,EAAOd,UAC9D,QAAS,OAAOiB,ICMtBwB,EAZY,WACd,IACI,IAAMC,EAAWC,OAAOC,aAAaC,QAAQ,aAC7C,IAAIH,EAAU,OACd,IAAMjB,EAAIqB,KAAKC,MAAML,GACfM,EAAU,IAAIX,KAAKZ,EAAErB,MAC3B,OAAO,2BAAIqB,GAAX,IAAarB,KAAO4C,IAExB,MAAMC,GACF,QAGSC,GACXC,EAAQC,YAAYb,EAAQE,GAElCU,EAAME,WAAU,YAzBE,SAACpC,GACf,IACI,IAAMyB,EAAWI,KAAKQ,UAAUrC,GAChC0B,OAAOC,aAAaW,QAAQ,YAAYb,GAE5C,MAAOO,GACH,QAoBJO,CAAUL,EAAMM,eAILN,QC1BTxD,EAAkB,I,yICNNS,G,2FACJsD,EAAWC,KAAKC,MAAMxD,EAAK,K,kBAEVyD,MAAM,mEAAD,OAAoEH,EAApE,iE,cAAlBlD,E,gBACYA,EAAKsD,O,cAAjBC,E,OACA1D,EAAY0D,EAAIC,MAAMtD,KAAI,SAACoB,EAAGK,GAAJ,OAAY,EAAK8B,eAAenC,EAAGK,M,kBAC5D9B,G,kCAEP6D,MAAM,S,sJAGC1D,EAAK2B,GAChB,MAAO,CACH5E,GAAK4E,EACLvD,MAAQ4B,EAAK5B,MACbC,MAAQ2B,EAAK3B,MACb1B,SAAWqD,EAAK2D,YAChBC,aAAe5D,EAAK6D,mBACpBrF,MAAOwB,EAAKxB,MAAMsF,aAClBrF,aAAeuB,EAAK+D,aACpBC,aAAehE,EAAKiE,mB,MDXhCC,IAASC,OACT,kBAAC,IAAD,CAAUxB,MAASA,GACjB,kBAAC/D,EAAD,CAAiBwF,MAASjF,GACxB,kBAAC,EAAD,QAGFkF,SAASC,eAAe,U","file":"static/js/main.e797ec6d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './question-list-item.css'\r\n\r\n\r\nfunction dragStart(e,card) {\r\n    e.dataTransfer.setData('id',card);\r\n};\r\nfunction dragEnd(e) {\r\n\r\n};\r\nfunction dragLeave(e) {\r\n    e.target.classList.remove('selected');\r\n}\r\nfunction dragOver(e) {\r\n    e.preventDefault();\r\n    e.target.classList.add('selected');\r\n};\r\nfunction dragDrop(e,card,changePosition) {\r\n    e.preventDefault();\r\n    e.target.classList.remove('selected');\r\n    const draggedCard = e.dataTransfer.getData('id');\r\n    changePosition(draggedCard);\r\n    changePosition(card);\r\n};\r\n\r\nconst QuestionListItem = ({question,show,changePosition,changeScore})=> {\r\n    const clazz = (question.active)? 'active' : 'hidden';\r\n    const clazzCard = (question.answered)? 'answered' : 'not-answered';\r\n    return (\r\n    <div>\r\n    <div className={`card ${clazzCard}`} onDoubleClick={(e)=>{changePosition(question.id)}}\r\n        draggable={true} \r\n        onDragStart={(e)=>{dragStart(e,question.id)}}\r\n        onDragLeave={(e)=>{dragLeave(e)}}\r\n        onDragEnd={(e)=>{dragEnd(e)}}\r\n        onDragOver={(e)=>{dragOver(e)}}\r\n        onDrop={(e)=>{dragDrop(e,question.id,changePosition)}}>\r\n            <div className=\"card-title\" onClick={(e)=>{show(question.id)}}> {question.title}</div>\r\n            <div className=\"card-side\">\r\n            <div className=\"card-value\"> {question.score} </div>\r\n            <div className=\"card-actions\"> \r\n                <button className=\"actions\" onClick={(e)=>{changeScore(question.id,'INC')}} onDoubleClick={(e)=>{e.stopPropagation();}}><i className=\"fa fa-arrow-circle-o-up\" aria-hidden=\"true\"></i></button>\r\n                <button className=\"actions\"onClick={(e)=>{changeScore(question.id,'DEC')}} onDoubleClick={(e)=>{e.stopPropagation();}}><i className=\"fa fa-arrow-circle-o-down\" aria-hidden=\"true\"></i></button>\r\n            </div>   \r\n            </div>\r\n    </div>\r\n    <div className={`${clazz} card-list`}>\r\n        <span>Автор : {question.owner}</span>\r\n        <br/>\r\n        <span>Количество ответов : {question.answersCount}</span>\r\n    </div>\r\n    </div> \r\n    )\r\n};\r\n\r\nexport default QuestionListItem;\r\n\r\n","import QuestionListItem from './question-list-item';\r\n\r\nexport default QuestionListItem;","import React from 'react';\r\n\r\nconst {\r\n    Provider : ServiceProvider,\r\n    Consumer : ServiceConsumer\r\n}= React.createContext();\r\n\r\nexport {\r\n    ServiceProvider,\r\n    ServiceConsumer\r\n};","import withQuestionService from './service-wrapper';\r\n\r\nexport default withQuestionService;","import React from 'react';\r\n\r\nimport {ServiceConsumer} from '../service-context';\r\n\r\nconst withQuestionService= ()=>(Wrapped)=> {\r\n    return(props)=>{\r\n        return(\r\n            <ServiceConsumer>\r\n                {\r\n                    (questionService)=>{\r\n                        return (\r\n                            <Wrapped {...props} questionService={questionService}/>\r\n                        )\r\n                    }\r\n                }\r\n            </ServiceConsumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withQuestionService;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = ()=> {\r\n    return (\r\n\t\t\r\n<div className=\"cssload-loader\">\r\n\t<div className=\"cssload-inner cssload-one\"></div>\r\n\t<div className=\"cssload-inner cssload-two\"></div>\r\n\t<div className=\"cssload-inner cssload-three\"></div>\r\n</div>\r\n    )\r\n};\r\n\r\nexport default Spinner;","const questionLoaded = (newQuestions) => {\r\n    return {\r\n      type: 'QUESTIONS_LOADED',\r\n      payload: newQuestions\r\n    };\r\n  };\r\nconst questionShow = (id)=>{\r\n    return {\r\n      type : 'SHOW_QUESTION',\r\n      payload: id\r\n    }\r\n  };\r\nconst changePosition = (id)=>{\r\n  return{\r\n    type: 'CHANGE_POSITION',\r\n    payload: id\r\n  }\r\n};\r\nconst changeScore = (id,action)=>{\r\n  return {\r\n    type: 'CHANGE_SCORE',\r\n    payload: id,\r\n    effect: action\r\n  }\r\n};\r\nconst hideAll = ()=>{\r\n  return{\r\n    type: 'HIDE_ALL'\r\n  }\r\n};\r\nconst showSearch = (date)=> {\r\n  return{\r\n    type: 'SHOW_SEARCH',\r\n    payload: date\r\n  }\r\n};\r\nconst loadingData = ()=> {\r\n  return {\r\n    type: 'LOADING'\r\n  }\r\n};\r\nexport {\r\n    questionLoaded,\r\n    questionShow,\r\n    changePosition,\r\n    changeScore,\r\n    hideAll,\r\n    showSearch,\r\n    loadingData\r\n  };\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport QuestionListItem from '../question-list-item';\r\nimport withQuestionService from '../service-wrapper';\r\nimport Spinner from '../spinner';\r\n\r\nimport {questionLoaded,questionShow,changePosition,changeScore} from '../../actions'\r\n\r\nimport './question-list.css';\r\n\r\nclass QuestionList extends Component {\r\n     componentDidMount(){\r\n        const {questionService,questionLoaded,date,questions} = this.props;\r\n        if (questions.length === 0){\r\n            questionService.getData(date).then((data)=>questionLoaded(data));\r\n        }      \r\n    }\r\n\r\n    render () {\r\n        const {questions,questionShow,changePosition,changeScore,loading} = this.props;\r\n        if(loading) {\r\n            return <Spinner/>\r\n        }else \r\n        {return ( \r\n            <ul className=\"list\" onClick={(e)=>{e.stopPropagation();}}>\r\n                {\r\n                    questions.map((question)=>{\r\n                        return (\r\n                            <li key={question.id}>\r\n                                <QuestionListItem key={question.id} question={question} show= {questionShow} changePosition={changePosition} changeScore={changeScore}/>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        )}\r\n    }\r\n};\r\n\r\nconst mapStateToProps= (state)=>{\r\n    return {\r\n        questions: state.questions,\r\n        date: state.date,\r\n        loading: state.loading\r\n    }\r\n};\r\n\r\nconst mapDisptachToProps= {\r\n    questionLoaded,\r\n    questionShow,\r\n    changePosition,\r\n    changeScore\r\n}\r\n\r\nexport default withQuestionService()(connect(mapStateToProps,mapDisptachToProps)(QuestionList));","import QuestionList from './question-list';\r\n\r\nexport default QuestionList;","import React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport {connect} from 'react-redux';\r\nimport './header.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport {showSearch,questionLoaded,loadingData} from '../../actions/';\r\nimport withQuestionService from '../service-wrapper';\r\n\r\nconst Header = ({showSearch,active,date,questionService,questionLoaded,loadingData})=> {\r\n    const clazz = (active)? 'active': 'hidden';\r\n    return (\r\n        <div className=\"header-bar\">\r\n           <div className=\"title-bar\"> 5 самых популярных вопросов на StackOverfow, содержащих \"react-redux\" в наименовании начиная с\r\n           <DatePicker className=\"date-bar\" selected={date} onChange={(date) => {showSearch(date);}} />\r\n           <button className={clazz} onClick={async (e)=>{loadingData();setTimeout(()=>{questionService.getData(date).then((data)=>questionLoaded(data))},2000);}}>{'Поиск  '} \r\n         <i className=\"fa fa-search\" aria-hidden=\"true\"></i></button></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state)=> {\r\n    return {\r\n        active: state.search,\r\n        date: state.date\r\n    }\r\n}\r\nconst mapDispatchToProps= {\r\n    showSearch,\r\n    questionLoaded,\r\n    loadingData\r\n}\r\n\r\n\r\nexport default withQuestionService()(connect(mapStateToProps,mapDispatchToProps)(Header));\r\n","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport QuestionList from '../question-list';\r\nimport Header from '../header';\r\nimport {connect} from 'react-redux';\r\nimport {hideAll,questionShow} from '../../actions';\r\n\r\nimport './app.css'\r\n\r\nconst App = ({hideAll})=> {\r\n    return (\r\n    <div className=\"container\" onClick={(e)=>{hideAll()}}>\r\n        <Header></Header>\r\n        <QuestionList/>\r\n    </div>\r\n    )\r\n};\r\nconst mapDisptachToProps = {\r\n    hideAll,questionShow\r\n};\r\n\r\n\r\nexport default connect(null,mapDisptachToProps)(App);","import App from './app';\r\n\r\nexport default App;","const show = (arr,id)=>{\r\n   return (arr.map((el)=>{\r\n       el.active = (el.id===id)? !el.active: false;\r\n       return el;\r\n   }))\r\n};\r\nconst changePosition = (state,position)=>{\r\n    let a = state.questions;\r\n    let b = state.pressed;\r\n    b.push(position);\r\n\r\n    if (b.length === 2) {\r\n        [a[b[0]],a[b[1]]]=[a[b[1]],a[b[0]]];\r\n        a = a.map((el,index)=>{ el.id=index; return el})\r\n        b=[];\r\n    }\r\n    return {\r\n        questions: a,\r\n        pressed: b\r\n    } \r\n};\r\nconst changeScore = (questions,id,effect)=>{\r\n   const newQuestions = [...questions];\r\n   switch (effect){\r\n       case 'INC':  ++newQuestions[id].score;break;\r\n       case 'DEC':  --newQuestions[id].score;break;\r\n       default: return newQuestions;\r\n   }\r\n   return newQuestions;\r\n};\r\n\r\nexport {\r\n    show,\r\n    changePosition,\r\n    changeScore\r\n}","import {show,changePosition,changeScore} from '../utils';\r\n\r\nconst initialState = {\r\n    questions : [],\r\n    date: new Date (2018,0,1),\r\n    pressed: [],\r\n    seacrch: false,\r\n    loading : true\r\n};\r\n\r\nconst reducer = (state=initialState, action)=>{\r\n       \r\n        switch (action.type) {\r\n            case 'QUESTIONS_LOADED' : {const newQuestions = action.payload; return {...state, questions:newQuestions, loading: false,search:false} ;};\r\n            case 'LOADING': return {...state, loading: true};\r\n            case 'SHOW_QUESTION': {const newQuestions = show(state.questions,action.payload); return {...state,questions:newQuestions}};\r\n            case 'CHANGE_POSITION': {const newData = changePosition(state,action.payload); return {...state,questions:newData.questions,pressed:newData.pressed}};\r\n            case 'CHANGE_SCORE': {const newQuestions= changeScore(state.questions,action.payload,action.effect); return {...state,questions: newQuestions}};\r\n            case 'HIDE_ALL': const newQuestions = state.questions.map((el)=>{el.active = false; return el;});return {...state,questions:newQuestions};\r\n            case 'SHOW_SEARCH': return {...state,search:true,date: action.payload};\r\n            default: return state;\r\n        }\r\n        \r\n};\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\n\r\nimport reducer from './recuder';\r\n\r\nconst saveState = (state)=> {\r\n    try {\r\n        const oldState = JSON.stringify(state);\r\n        window.localStorage.setItem('app_state',oldState);\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nconst loadState = ()=> {\r\n    try {\r\n        const oldState = window.localStorage.getItem('app_state');\r\n        if(!oldState) return undefined;\r\n        const a = JSON.parse(oldState);\r\n        const newDate = new Date(a.date);\r\n        return {...a,date : newDate};\r\n    }\r\n    catch(err) {\r\n        return undefined;\r\n    }\r\n};\r\nconst oldStore = loadState();\r\nconst store = createStore(reducer,oldStore);\r\n\r\nstore.subscribe(()=>{\r\n    saveState(store.getState());\r\n});\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {ServiceProvider} from './components/service-context';\nimport QuestionService from './services/question-service';\n\nconst questionService = new QuestionService();\n\n\nReactDOM.render( \n<Provider store = {store}>\n  <ServiceProvider value = {questionService}>\n    <App/>\n  </ServiceProvider>\n</Provider>\n, document.getElementById('root'));\n","export default class QuestionService {\r\n\r\n    async getData(date) {\r\n        const fromDate = Math.floor(date/1000);\r\n        try {\r\n            const data = await fetch(`https://api.stackexchange.com/2.2/questions?pagesize=5&fromdate=${fromDate}&order=desc&sort=votes&tagged=react-redux&site=stackoverflow`);\r\n            const res = await data.json();\r\n            const questions = res.items.map((el,index)=>this._transformData(el,index));\r\n            return questions;\r\n        }catch (error) {\r\n            alert('ERROR');\r\n        }\r\n    };\r\n    _transformData(data,index) {\r\n        return {\r\n            id : index,\r\n            title : data.title,\r\n            score : data.score,\r\n            answered : data.is_answered,\r\n            lastActivity : data.last_activity_date,\r\n            owner: data.owner.display_name,\r\n            answersCount : data.answer_count,\r\n            creationDate : data.creation_date\r\n        }\r\n    }\r\n};\r\n"],"sourceRoot":""}